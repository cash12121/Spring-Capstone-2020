using DataTransferObjects;
using LogicLayer;
using LogicLayerInterfaces;
using PresentationUtilityCode;
using System;
using System.Windows;
using System.Windows.Controls;

namespace WPFPresentationLayer.SystemAdminPages
{
    /// <summary>
    /// Creator: Zach Behrensmeyer
    /// Created: 2/20/2020
    /// Approver: Michael Thompson
    /// 
    /// This class controls UserControls page
    /// 
    /// </summary>
    public partial class pgCustomerControls : Page
    {
        private ICustomerManager _customerManager;


        /// <summary>
        /// Creator: Zach Behrensmeyer
        /// Created: 2/20/2020
        /// Approver: Michael Thompson
        /// 
        /// This is a constructor for the UserControls Page
        /// 
        /// </summary>
        /// <remarks>
        /// Updater: NA
        /// Updated: NA
        /// Update: NA
        /// 
        /// </remarks>
        /// </summary>
        public pgCustomerControls()
        {
            _customerManager = new CustomerManager();
            InitializeComponent();
        }

        /// <summary>
        /// Creator: Steven Cardona
        /// Created: 04/16/2020
        /// Approver: Zach Behrensmeyer
        /// 
        /// Construct for when name in status bar is clicked
        /// </summary>
        /// <remarks>
        /// Updater: NA
        /// Updated: NA
        /// Update: NA
        /// </remarks>
        public pgCustomerControls(Customer customer)
        {
            _customerManager = new CustomerManager();
            InitializeComponent();
        }

        /// <summary>
        /// Creator: Steven Cardona
        /// Created: 02/14/2020
        /// Approver: Jordan Lindo
        /// 
        /// Method of general Error handling.
        /// </summary>
        /// <remarks>
        /// Updater: Chase Schulte
        /// Updated: 03/03/2020
        /// Update: Removes all inherited ERole fields
        /// Updater: Chase Schulte
        /// Updated: 04/10/2020 
        /// Update: Removed remove for EROLEs and HasViewedPolAndStan
        /// Approver: Kaleb Bachert
        /// </remarks>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void dgCustomerList_AutoGeneratedColumns(object sender, EventArgs e)
        {
            dgCustomerList.Columns.RemoveAt(9); //Remove Active            
            dgCustomerList.Columns[0].Header = "Email";
            dgCustomerList.Columns[1].Header = "First Name";
            dgCustomerList.Columns[2].Header = "Last Name";
            dgCustomerList.Columns[3].Header = "Phone Number";
            dgCustomerList.Columns[4].Header = "Address Line 1";
            dgCustomerList.Columns[5].Header = "Address Line 2";
            dgCustomerList.Columns[6].Header = "City";
            dgCustomerList.Columns[7].Header = "State";
            dgCustomerList.Columns[8].Header = "ZipCode";

            // this fill all availalbe space with available columns
            foreach (var column in this.dgCustomerList.Columns)
            {
                column.Width = new DataGridLength(1, DataGridLengthUnitType.Star);
            }

            dgCustomerList.Columns[0].Width = 180;
            dgCustomerList.Columns[7].Width = 50;
        }

        /// <summary>
        /// Creator: Steven Cardona
        /// Created: 02/14/2020
        /// Approver: Zach Behrensmeyer
        /// 
        /// When dgUserList is loaded. Adds items into dgUserList.
        /// </summary>
        /// <remarks>
        /// Updater: NA
        /// Updated: NA
        /// Update: NA
        /// </remarks>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void dgCustomerList_Loaded(object sender, RoutedEventArgs e)
        {
            RefreshDgCustomerList();
        }

        /// <summary>
        /// Creator: Steven Cardona
        /// Created: 02/14/2020
        /// Approver: Zach Behrensmeyer
        /// 
        /// Adds items into dgUserList.
        /// </summary>
        /// <remarks>
        /// Updater: NA
        /// Updated: NA
        /// Update: NA
        /// </remarks>
        private void RefreshDgCustomerList()
        {
            try
            {
                dgCustomerList.ItemsSource = _customerManager.RetrieveAllActiveCustomers();
            }
            catch (Exception ex)
            {
                LogicLayerErrorHandler.DataLoadErrorMessage(ex.Message, ex.InnerException.Message);
            }

        }
    }
}
