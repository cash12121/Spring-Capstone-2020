using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using DataTransferObjects;
using LogicLayer;
using LogicLayerInterfaces;
using PresentationUtilityCode;

namespace WPFPresentationLayer.InventoryPages
{
    /// <summary>
    /// Creator: Brandyn T. Coverdill
    /// Created: 2020/04/16
	/// Approver: Kaleb Bachert
	/// Approver: Jesse Tomash
    ///
    /// Code Behind file for view Vendor Page.
    /// </summary>
    public partial class ViewVendors : Page
    {

        private IVendorManager _vendorManager;

        public ViewVendors()
        {
            _vendorManager = new VendorManager();
            InitializeComponent();
        }

        /// <summary>
        /// Creator: Brandyn T. Coverdill
        /// Created: 2020/04/16
        /// Approver: Kaleb Bachert
        /// Approver: Jesse Tomash
        ///
        /// Views specific details about a vendor.
        /// </summary>
        ///
        /// <remarks>
        /// Updated By: 
        /// Updated: 
        /// Update:
        /// </remarks>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void btnViewVendor_Click(object sender, RoutedEventArgs e)
        {
            Vendor vendor = (Vendor)dgVendors.SelectedItem;
            if (dgVendors.SelectedItem != null)
            {
                this.NavigationService?.Navigate(new EditVendor(vendor));
            }
            else
            {
                "Please pick a vendor to view.".ErrorMessage();
            }
        }

        /// <summary>
        /// Creator: Brandyn T. Coverdill
        /// Created: 2020/04/16
        /// Approver: Kaleb Bachert
        /// Approver: Jesse Tomash
        ///
        /// adds a new vendor.
        /// </summary>
        ///
        /// <remarks>
        /// Updated By: 
        /// Updated: 
        /// Update:
        /// </remarks>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void btnAddVendor_Click(object sender, RoutedEventArgs e)
        {
            this.NavigationService?.Navigate(new AddVendor());
        }

        /// <summary>
        /// Creator: Brandyn T. Coverdill
        /// Created: 2020/04/16
        /// Approver: Kaleb Bachert
        /// Approver: Jesse Tomash
        ///
        /// removes a vendor.
        /// </summary>
        ///
        /// <remarks>
        /// Updated By: 
        /// Updated: 
        /// Update:
        /// </remarks>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void btnRemoveVendor_Click(object sender, RoutedEventArgs e)
        {
            Vendor vendor = (Vendor)dgVendors.SelectedItem;
            if (dgVendors.SelectedItem != null)
            {
                _vendorManager.deleteVendor(vendor.VendorID);
                dgVendors.ItemsSource = _vendorManager.retrieveVendors();
            }
            else
            {
                "Please pick a vendor to delete.".ErrorMessage();
            }
        }

        /// <summary>
        /// Creator: Brandyn T. Coverdill
        /// Created: 2020/04/16
        /// Approver: Kaleb Bachert
        /// Approver: Jesse Tomash
        ///
        /// Edits the datagrid to have certain columns.
        /// </summary>
        ///
        /// <remarks>
        /// Updated By: 
        /// Updated: 
        /// Update:
        /// </remarks>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void dgVendors_AutoGeneratedColumns(object sender, EventArgs e)
        {
            dgVendors.Columns.RemoveAt(0);
            dgVendors.Columns[5].DisplayIndex = 2;
            dgVendors.Columns[4].DisplayIndex = 3;
            dgVendors.Columns[6].DisplayIndex = 4;
            dgVendors.Columns[3].DisplayIndex = 5;
            dgVendors.Columns[0].Header = "Vendor Name";
            dgVendors.Columns[1].Header = "Address";
            dgVendors.Columns[2].Header = "Phone Number";
            dgVendors.Columns[3].Header = "Email Address";
            dgVendors.Columns[4].Header = "State";
            dgVendors.Columns[5].Header = "City";
            dgVendors.Columns[6].Header = "Zipcode";
            foreach (var column in this.dgVendors.Columns)
            {
                column.Width = new DataGridLength(1, DataGridLengthUnitType.Star);
            }
        }

        /// <summary>
        /// Creator: Brandyn T. Coverdill
        /// Created: 2020/04/16
        /// Approver: Kaleb Bachert
        /// Approver: Jesse Tomash
        ///
        /// when the dategrid is loaded, populate the datagrid.
        /// </summary>
        ///
        /// <remarks>
        /// Updated By: 
        /// Updated: 
        /// Update:
        /// </remarks>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void dgVendors_Loaded(object sender, RoutedEventArgs e)
        {
            dgVendors.ItemsSource = _vendorManager.retrieveVendors();
        }

        /// <summary>
        /// Creator: Brandyn T. Coverdill
        /// Created: 2020/04/17
        /// Approver: Kaleb Bachert
        /// Approver: Jesse Tomash
        ///
        /// Searches Vendors by Vendor Name.
        /// </summary>
        ///
        /// <remarks>
        /// Updated By: 
        /// Updated: 
        /// Update:
        /// </remarks>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void btnSearch_Click(object sender, RoutedEventArgs e)
        {
            if (txtSearch.Text.Trim() == "")
            {
                dgVendors.ItemsSource = _vendorManager.retrieveVendors();
            }
            else
            {
                populateVendors();
            }
        }

        /// <summary>
        /// Creator: Brandyn T. Coverdill
        /// Created: 2020/04/17
        /// Approver: Kaleb Bachert
        /// Approver: Jesse Tomash
        ///
        /// Searches Vendors by Vendor Name.
        /// </summary>
        ///
        /// <remarks>
        /// Updated By: 
        /// Updated: 
        /// Update:
        /// </remarks>
        private void populateVendors()
        {
            // Save text from the text area.
            string searchedName = txtSearch.Text.ToString();

            // Get a list of all the item reports in the database.
            List<Vendor> vendorForSearch = new List<Vendor>();
            vendorForSearch = _vendorManager.retrieveVendors();

            // Search through the Item Names which contain the text entered by the user.
            dgVendors.ItemsSource = vendorForSearch.Where(r => r.VendorName.ToLower().Contains(searchedName.ToLower()));
        }
    }
}
