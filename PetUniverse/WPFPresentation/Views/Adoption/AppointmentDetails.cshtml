@model DataTransferObjects.AdoptionAppointmentVM

<br/>

<h2>@ViewBag.Title</h2>

<div>
    
    <hr />
    <dl class="dl-horizontal">


        <dt>
            @Html.DisplayNameFor(model => model.AppointmentTypeID)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AppointmentTypeID)
        </dd>

        <dt>
            Appointment Date
        </dt>
        <dd>
            @Model.AppointmentDateTime.ToShortDateString()
        </dd>

        <dt>
            Appointment Time
        </dt>
        <dd>
            @Model.AppointmentDateTime.ToShortTimeString()
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AdoptionApplicationStatus)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AdoptionApplicationStatus)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AdoptionApplicationRecievedDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AdoptionApplicationRecievedDate)
        </dd>

        <h4 class="border-bottom border-top">
            Location
        </h4>

        <dt>
            @Html.DisplayNameFor(model => model.LocationName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LocationName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LocationAddress1)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LocationAddress1)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LocationAddress2)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LocationAddress2)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LocationCity)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LocationCity)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LocationState)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LocationState)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LocationZip)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LocationZip)
        </dd>

        <h4 class="border-bottom border-top">
            Animal Information
        </h4>

        <dt>
            @Html.DisplayNameFor(model => model.AnimalName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AnimalName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AnimalDob)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AnimalDob)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AnimalSpeciesID)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AnimalSpeciesID)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AnimalBreed)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AnimalBreed)
        </dd>

        @*<dt>
            @Html.DisplayNameFor(model => model.CustomerFirstName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CustomerFirstName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CustomerLastName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CustomerLastName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CustomerPhoneNumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CustomerPhoneNumber)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CustomerEmail)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CustomerEmail)
        </dd>*@







    </dl>
</div>
<p>
    @Html.ActionLink("Back to Appointments", "CustomerAppointmentSchedule", new { email = User.Identity.Name }, new { @class = "btn btn-primary"})
    @Html.ActionLink("Reschedule", "RescheduleAppointment", new { id = Model.AppointmentID }, new { @class = "btn btn-primary"})
</p>
